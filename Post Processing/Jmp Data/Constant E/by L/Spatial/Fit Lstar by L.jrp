New Table( "statAnalysis_Lstar", 	Add Rows( 94 ), 	Set Header Height( 46 ), 	New Column( "E", 		Numeric, 		"Nominal", 		Format( "Best", 12 ), 		Set Values( 			[0, 0, 0, 0, 40, 40, 40, 40, 400, 400, 400, 400, 4000, 4000, 4000, 4000, 			0, 0, 0, 40, 40, 40, 400, 400, 400, 400, 4000, 4000, 4000, 4000, 0, 0, 0, 			0, 40, 40, 40, 40, 400, 400, 400, 400, 4000, 4000, 4000, 4000, 0, 0, 0, 			0, 40, 40, 40, 40, 400, 400, 400, 400, 4000, 4000, 4000, 4000, 0, 0, 0, 			0, 40, 40, 40, 40, 400, 400, 400, 400, 4000, 4000, 4000, 4000, 0, 0, 0, 			0, 40, 40, 40, 40, 400, 400, 400, 400, 4000, 4000, 4000, 4000] 		), 		Set Display Width( 68 ) 	), 	New Column( "L", 		Numeric, 		"Nominal", 		Format( "Best", 12 ), 		Set Values( 			[200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 			200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 200, 			200, 200, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 			500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 500, 			500, 500, 500, 500, 500, 500, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 			1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 			1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 1000, 			1000] 		), 		Set Display Width( 64 ) 	), 	New Column( "k", 		Numeric, 		"Nominal", 		Format( "Best", 12 ), 		Set Values( 			[0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 			0.4, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 			0.8, 0.8, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 			0.4, 0.4, 0.4, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 			0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 			0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.4, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 			0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8, 0.8] 		), 		Set Display Width( 64 ) 	), 	New Column( "Lstar", 		Numeric, 		"Continuous", 		Format( "Best", 12 ), 		Set Selected, 		Set Values( 			[20.8683, 33.9104, 22.8118, 21.7068, 20.3311, 24.4252, 30.7741, 23.6858, 			28.335, 29.2719, 29.7818, 54.656, 53.5411, 54.4644, 57.433, 33.2238, 			34.2596, 69.0587, 78.0332, 55.8153, 54.9919, 99.3371, 38.8884, 72.6214, 			74.7597, 66.7742, 90.1756, 71.4316, 88.2347, 74.6746, 21.1981, 16.8775, 			18.7395, 24.26, 24.2769, 22.2457, 20.945, 33.0871, 18.6687, 29.8582, 			36.922, 33.6661, 112.0955, 40.6419, 55.0566, 67.9046, 71.7466, 88.0579, 			103.2616, 70.4549, 106.2358, 61.8119, 61.2743, 58.7898, 74.7217, 			102.0676, 74.5392, 92.542, 114.2683, 103.9045, 105.0906, 117.4334, 			22.1609, 16.6964, 13.3507, 17.4145, 22.5397, 17.2905, 13.6925, 29.2142, 			23.9753, 19.0979, 19.8409, 23.1556, 50.434, 49.2674, 50.3177, 32.2167, 			86.0693, 41.9357, 59.5682, 66.4293, 51.1423, 72.5272, 75.2292, 57.4457, 			51.0062, 82.2288, 57.0805, 84.007, 47.9823, 88.3263, 90.2693, 85.5404] 		), 		Set Display Width( 65 ) 	), 	New Column( "Rstar", 		Numeric, 		"Continuous", 		Format( "Best", 12 ), 		Set Values( 			[191, 245, 207, 245, 191, 173, 147, 191, 173, 245, 173, 289, 245, 245, 			289, 147, 245, 369, 387, 387, 371, 387, 289, 371, 307, 415, 371, 351, 			371, 307, 147, 173, 129, 147, 229, 207, 191, 191, 147, 147, 245, 191, 			327, 191, 191, 229, 363, 371, 387, 289, 371, 289, 245, 289, 289, 387, 			327, 363, 387, 389, 345, 387, 147, 147, 65, 129, 229, 147, 147, 147, 147, 			191, 147, 191, 229, 245, 229, 245, 407, 229, 307, 343, 307, 289, 389, 			343, 307, 343, 343, 371, 229, 387, 345, 307] 		), 		Set Display Width( 53 ) 	), 	New Column( "Area", 		Numeric, 		"Continuous", 		Format( "Best", 12 ), 		Set Values( 			[5931.44, 15456.68, 8908.68, 7338.72, 5113.42, 8115.76, 9481.75, 6441.49, 			11237.49, 11211.77, 9051.02, 23899.85, 22010.57, 26398.24, 20703, 			11113.12, 12966.07, 34178.44, 37207.05, 27610.96, 25117.52, 47716.26, 			13738.93, 35374.07, 36447.51, 32494.71, 44068.8, 35519.26, 43417.97, 			36704.46, 4849.14, 3574.57, 3061.19, 3522.02, 7616.26, 7668.45, 7436.04, 			11857.2, 1718.18, 4760.59, 13026.89, 9102.55, 55084.09, 20053.66, 			18839.05, 28219.05, 35377.01, 43185, 50186.97, 31163.69, 51789.68, 			23607.99, 24512.16, 24395.02, 32106.95, 49541.74, 35861.68, 45302.98, 			56346.76, 50959.85, 48490.32, 58306.27, 5816.66, 3912.94, 1787.53, 801.2, 			8337.6, 4249.39, 420.07, 4673.65, 5100.82, 4453.74, 1900.77, 7346.59, 			21989.68, 17363.27, 16450.12, 10144.09, 43767.31, 16704.51, 29937.43, 			29834.99, 18285.56, 34772.9, 36372.45, 27996.91, 24197.07, 39455.74, 			26967.27, 39618.89, 18957.7, 42175.94, 43640.71, 39516.99] 		), 		Set Display Width( 64 ) 	), 	New Column( "LRstar", 		Numeric, 		"Continuous", 		Format( "Best", 12 ), 		Set Values( 			[3985.85, 8308.06, 4722.04, 5318.17, 3883.24, 4225.56, 4523.79, 4523.98, 			4901.96, 7171.61, 5152.24, 15795.59, 13117.56, 13343.78, 16598.14, 			4883.89, 8393.6, 25482.65, 30198.83, 21600.52, 20402, 38443.44, 11238.74, 			26942.54, 22951.22, 27711.29, 33455.16, 25072.48, 32735.09, 22925.1, 			3116.12, 2919.81, 2417.4, 3566.22, 5559.41, 4604.87, 4000.49, 6319.63, 			2744.29, 4389.15, 9045.9, 6430.22, 36655.22, 7762.6, 10515.81, 15550.16, 			26044.02, 32669.47, 39962.24, 20361.47, 39413.47, 17863.64, 15012.21, 			16990.26, 21594.58, 39500.17, 24374.31, 33592.76, 44221.84, 40418.87, 			36256.24, 45446.71, 3257.65, 2454.36, 867.8, 2246.47, 5161.59, 2541.71, 			2012.8, 4294.49, 3524.36, 3647.7, 2916.61, 4422.71, 11549.39, 12070.5, 			11522.76, 7893.09, 35030.19, 9603.28, 18287.44, 22785.26, 15700.68, 			20960.37, 29264.17, 19703.86, 15658.91, 28204.47, 19578.61, 31166.59, 			10987.94, 34182.26, 31142.9, 26260.9] 		), 		Set Display Width( 68 ) 	), 	Set Row States( 		[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 		0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0] 	) ) << Run Formulas; Oneway( 	SendToByGroup( Bygroup Default ), 	Y( :Lstar ), 	SendToByGroup( {:E == 4000, :k == 0.4}, Y( :Lstar ) ), 	SendToByGroup( {:E == 4000, :k == 0.8}, Y( :Lstar ) ), 	X( :L ), 	SendToByGroup( {:E == 4000, :k == 0.4}, X( :L ) ), 	SendToByGroup( {:E == 4000, :k == 0.8}, X( :L ) ), 	All Pairs( 		1, 		Confidence Quantile( 0 ), 		LSD Threshold Matrix( 0 ), 		Connecting Letters Report( 0 ) 	), 	SendToByGroup( {:E == 4000, :k == 0.8}, Means( 1 ), Mean Diamonds( 1 ) ), 	By( :E, :k ) );